# Tool home: /home/tran/TUW/apalache/v0.16.2/apalache
# Package:   /home/tran/TUW/apalache/v0.16.2/apalache/mod-distribution/target/apalache-pkg-0.16.3-SNAPSHOT-full.jar
# JVM args:  -Xmx4096m -DTLA-Library=/home/tran/TUW/apalache/v0.16.2/apalache/src/tla
#
# APALACHE version 0.16.3-SNAPSHOT build v0.16.2-28-g27d8e4c
#
# WARNING: This tool is in the experimental stage.
#          Please report bugs at: [https://github.com/informalsystems/apalache/issues]
# 
# Usage statistics is OFF. We care about your privacy.
# If you want to help our project, consider enabling statistics with config --enable-stats=true.

Checker options: filename=toinv_int_int_t_i1.tla, init=, next=, inv= I@11:13:18.923
Tuning:                                                           I@11:13:19.179
PASS #0: SanyParser                                               I@11:13:19.180
Parsing file /home/tran/TUW/apalache/v0.16.2/apalache/Skeen_others/toinv_int_int_t_i1.tla
Parsing file /home/tran/TUW/apalache/v0.16.2/apalache/Skeen_others/skeen_int_int_t.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/Integers.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/Sequences.tla
Parsing file /tmp/Naturals.tla
PASS #1: TypeCheckerSnowcat                                       I@11:13:20.657
 > Running Snowcat .::.                                           I@11:13:20.658
 > Your types are great!                                          I@11:13:23.936
 > All expressions are typed                                      I@11:13:23.936
PASS #2: ConfigurationPass                                        I@11:13:24.139
  > toinv_int_int_t_i1.cfg: Loading TLC configuration             I@11:13:24.142
  > Using the init predicate IndInv from the TLC config           I@11:13:24.192
  > Using the next predicate Next from the TLC config             I@11:13:24.193
  > toinv_int_int_t_i1.cfg: found INVARIANTS: IndInv              I@11:13:24.193
  > Set the initialization predicate to IndInv                    I@11:13:24.194
  > Set the transition predicate to Next                          I@11:13:24.194
  > Set an invariant to IndInv                                    I@11:13:24.195
  > Replaced CONSTANT M with const_16158859394581540000()         I@11:13:24.197
  > Replaced CONSTANT N with const_16158859394581541000()         I@11:13:24.198
  > Replaced CONSTANT Mcaster with const_16158859394581542000()   I@11:13:24.198
  > Replaced CONSTANT MaxClock with const_16158859394581543000()  I@11:13:24.198
  > Replaced CONSTANT GroupDest with const_16158859394581544000() I@11:13:24.198
PASS #3: DesugarerPass                                            I@11:13:24.411
  > Desugaring...                                                 I@11:13:24.412
PASS #4: UnrollPass                                               I@11:13:24.599
  > Unroller                                                      I@11:13:24.658
PASS #5: InlinePass                                               I@11:13:24.857
  > InlinerOfUserOper                                             I@11:13:24.860
  > Wrap                                                          I@11:13:24.915
  > CallByNameOperatorEmbedder                                    I@11:13:24.922
  > LetInExpander                                                 I@11:13:24.928
  > Unwrap                                                        I@11:13:24.939
  > InlinerOfUserOper                                             I@11:13:24.945
Leaving only relevant operators: CInitPrimed, IndInv, IndInvPrimed, Next I@11:13:24.957
PASS #6: PrimingPass                                              I@11:13:25.085
  > Introducing IndInvPrimed for IndInv'                          I@11:13:25.087
PASS #7: VCGen                                                    I@11:13:25.276
  > Producing verification conditions from the invariant IndInv   I@11:13:25.277
  > VCGen produced 63 verification condition(s)                   I@11:13:25.291
PASS #8: PreprocessingPass                                        I@11:13:25.517
  > Before preprocessing: unique renaming                         I@11:13:25.517
 > Applying standard transformations:                             I@11:13:25.524
  > PrimePropagation                                              I@11:13:25.524
  > Desugarer                                                     I@11:13:25.742
  > UniqueRenamer                                                 I@11:13:25.942
  > Normalizer                                                    I@11:13:26.210
  > Keramelizer                                                   I@11:13:26.427
  > After preprocessing: UniqueRenamer                            I@11:13:26.690
PASS #9: TransitionFinderPass                                     I@11:13:26.938
  > Found 1 initializing transitions                              I@11:13:26.984
  > Found 6 transitions                                           I@11:13:27.030
  > No constant initializer                                       I@11:13:27.030
  > Applying unique renaming                                      I@11:13:27.031
PASS #10: OptimizationPass                                        I@11:13:27.263
 > Applying optimizations:                                        I@11:13:27.268
  > ConstSimplifier                                               I@11:13:27.269
  > ExprOptimizer                                                 I@11:13:27.320
  > ConstSimplifier                                               I@11:13:27.361
PASS #11: AnalysisPass                                            I@11:13:27.592
 > Marking skolemizable existentials and sets to be expanded...   I@11:13:27.594
  > Skolemization                                                 I@11:13:27.595
  > Expansion                                                     I@11:13:27.600
  > Remove unused let-in defs                                     I@11:13:27.628
 > Running analyzers...                                           I@11:13:27.650
  > Introduced expression grades                                  I@11:13:27.883
  > Introduced 21 formula hints                                   I@11:13:27.883
PASS #12: PostTypeCheckerSnowcat                                  I@11:13:27.884
 > Running Snowcat .::.                                           I@11:13:27.884
 > Your types are great!                                          I@11:16:01.059
 > All expressions are typed                                      I@11:16:01.059
PASS #13: BoundedChecker                                          I@11:16:01.326
State 0: Checking 63 state invariants                             I@11:16:03.016
Step 0: picking a transition out of 1 transition(s)               I@11:16:03.638
State 1: Checking 29 state invariants                             I@11:16:03.668
Step 1: Transition #2 is disabled                                 I@11:16:04.011
State 1: Checking 45 state invariants                             I@11:16:04.052
Step 1: Transition #4 is disabled                                 I@11:16:04.473
State 1: Checking 55 state invariants                             I@11:16:04.552
Step 1: picking a transition out of 4 transition(s)               I@11:16:05.062
The outcome is: NoError                                           I@11:16:05.149
PASS #14: Terminal                                                I@11:16:05.150
Checker reports no error up to computation length 1               I@11:16:05.150
It took me 0 days  0 hours  2 min 46 sec                          I@11:16:05.151
Total time: 166.275 sec                                           I@11:16:05.151
EXITCODE: OK
